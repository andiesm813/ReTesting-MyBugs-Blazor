@page "/view_2"
@using Service
@using Models.Service
@inject IServiceService ServiceService

<div class="row-layout view-2-container">
    <IgbStepper TitlePosition="StepperTitlePosition.Bottom" @ref="_stepper" class="stepper" view_2-scope>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <IgbDatePicker Label="Date" Outlined="true" Mode="DatePickerMode.Dialog" class="date-picker" view_2-scope></IgbDatePicker>
                <IgbCombo Outlined="true" Data="@_serviceBoxOfficeRevenue" Label="Label/Placeholder" DisplayKey="Franchise" T="object" SingleSelect="true" class="user-input" view_2-scope></IgbCombo>
                <IgbInput Label="Label" Outlined="true" class="user-input" view_2-scope></IgbInput>
                <IgbSelect Outlined="true" Label="Label/Placeholder" class="user-input" view_2-scope>
                    <IgbSelectItem Value="Option">
                        Option
                    </IgbSelectItem>
                </IgbSelect>
                <IgbTextarea Label="Label/Placeholder" Outlined="true" class="user-input" view_2-scope></IgbTextarea>
                <div class="row-layout group">
                    <IgbButton DisplayType="ButtonBaseType.Button" @onclick="@(e => _stepper!.NextAsync())" class="button" view_2-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Address</p>
        </IgbStep>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton DisplayType="ButtonBaseType.Button" @onclick="@(e => _stepper!.PrevAsync())" class="button" view_2-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton DisplayType="ButtonBaseType.Button" @onclick="@(e => _stepper!.NextAsync())" class="button" view_2-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Item</p>
        </IgbStep>
        <IgbStep Optional="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton DisplayType="ButtonBaseType.Button" @onclick="@(e => _stepper!.PrevAsync())" class="button" view_2-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton DisplayType="ButtonBaseType.Button" @onclick="@(e => _stepper!.ResetAsync())" class="button" view_2-scope>
                        Reset
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Wrap</p>
            <p slot="subtitle">(Optional)</p>
        </IgbStep>
    </IgbStepper>
</div>

@code {
    private IgbStepper _stepper;
    private List<BoxOfficeRevenueType> _serviceBoxOfficeRevenue = new();

    protected override async Task OnInitializedAsync()
    {
        _serviceBoxOfficeRevenue = await ServiceService.GetBoxOfficeRevenue();
        await base.OnInitializedAsync();
    }
}
